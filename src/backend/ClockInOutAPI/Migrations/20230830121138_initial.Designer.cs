// <auto-generated />
using System;
using ClockInOutAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClockInOutAPI.Migrations
{
    [DbContext(typeof(ClockInOutContext))]
    [Migration("20230830121138_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ClockInOutAPI.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("HRAdministratorId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("HRAdministratorId1")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("HRAdministratorId1");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("ClockInOutAPI.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DailyWorkingHours")
                        .HasColumnType("int");

                    b.Property<int>("DepartamentId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("HRAdministratorId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("HRAdministratorId1")
                        .HasColumnType("int");

                    b.Property<DateOnly>("HireDate")
                        .HasColumnType("date");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("HRAdministratorId1");

                    b.HasIndex("PositionId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("ClockInOutAPI.Models.HRAdministrator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("HRAdministrators");
                });

            modelBuilder.Entity("ClockInOutAPI.Models.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("HRAdministratorId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("HRAdministratorId1")
                        .HasColumnType("int");

                    b.Property<double>("HrValue")
                        .HasColumnType("double");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("HRAdministratorId1");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("ClockInOutAPI.Models.Department", b =>
                {
                    b.HasOne("ClockInOutAPI.Models.HRAdministrator", "HRAdministrator")
                        .WithMany("Departments")
                        .HasForeignKey("HRAdministratorId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HRAdministrator");
                });

            modelBuilder.Entity("ClockInOutAPI.Models.Employee", b =>
                {
                    b.HasOne("ClockInOutAPI.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClockInOutAPI.Models.HRAdministrator", "HRAdministrator")
                        .WithMany("Employees")
                        .HasForeignKey("HRAdministratorId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClockInOutAPI.Models.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("HRAdministrator");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("ClockInOutAPI.Models.Position", b =>
                {
                    b.HasOne("ClockInOutAPI.Models.HRAdministrator", "HRAdministrator")
                        .WithMany("Positions")
                        .HasForeignKey("HRAdministratorId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HRAdministrator");
                });

            modelBuilder.Entity("ClockInOutAPI.Models.HRAdministrator", b =>
                {
                    b.Navigation("Departments");

                    b.Navigation("Employees");

                    b.Navigation("Positions");
                });
#pragma warning restore 612, 618
        }
    }
}
