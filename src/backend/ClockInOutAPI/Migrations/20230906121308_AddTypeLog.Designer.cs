// <auto-generated />
using System;
using ClockInOutAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClockInOutAPI.Migrations
{
    [DbContext(typeof(ClockInOutContext))]
    [Migration("20230906121308_AddTypeLog")]
    partial class AddTypeLog
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ClockInOutAPI.Models.Departament", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("HRAdministratorId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("HRAdministratorId");

                    b.ToTable("Departaments");
                });

            modelBuilder.Entity("ClockInOutAPI.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DailyWorkingHours")
                        .HasColumnType("int");

                    b.Property<int>("DepartamentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("HRAdministratorId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("HireDate")
                        .HasColumnType("date");

                    b.Property<int?>("JustificationId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentId");

                    b.HasIndex("HRAdministratorId");

                    b.HasIndex("JustificationId");

                    b.HasIndex("PositionId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("ClockInOutAPI.Models.HRAdministrator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("HRAdministrators");
                });

            modelBuilder.Entity("ClockInOutAPI.Models.Justification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("HRAdministratorId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("HRAdministratorId");

                    b.ToTable("Justifications");
                });

            modelBuilder.Entity("ClockInOutAPI.Models.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("HRAdministratorId")
                        .HasColumnType("int");

                    b.Property<double>("HrValue")
                        .HasColumnType("double");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("HRAdministratorId");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("ClockInOutAPI.Models.TimeLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsEdited")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("JustificationId")
                        .HasColumnType("int");

                    b.Property<int>("LogType")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("JustificationId");

                    b.ToTable("TimeLogs");
                });

            modelBuilder.Entity("ClockInOutAPI.Models.Departament", b =>
                {
                    b.HasOne("ClockInOutAPI.Models.HRAdministrator", "HRAdministrator")
                        .WithMany("Departaments")
                        .HasForeignKey("HRAdministratorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HRAdministrator");
                });

            modelBuilder.Entity("ClockInOutAPI.Models.Employee", b =>
                {
                    b.HasOne("ClockInOutAPI.Models.Departament", "Departament")
                        .WithMany("Employees")
                        .HasForeignKey("DepartamentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ClockInOutAPI.Models.HRAdministrator", "HRAdministrator")
                        .WithMany("Employees")
                        .HasForeignKey("HRAdministratorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClockInOutAPI.Models.Justification", null)
                        .WithMany("Employees")
                        .HasForeignKey("JustificationId");

                    b.HasOne("ClockInOutAPI.Models.Position", "Position")
                        .WithMany("Employees")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Departament");

                    b.Navigation("HRAdministrator");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("ClockInOutAPI.Models.Justification", b =>
                {
                    b.HasOne("ClockInOutAPI.Models.HRAdministrator", "HRAdministrator")
                        .WithMany("Justifications")
                        .HasForeignKey("HRAdministratorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HRAdministrator");
                });

            modelBuilder.Entity("ClockInOutAPI.Models.Position", b =>
                {
                    b.HasOne("ClockInOutAPI.Models.HRAdministrator", "HRAdministrator")
                        .WithMany("Positions")
                        .HasForeignKey("HRAdministratorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HRAdministrator");
                });

            modelBuilder.Entity("ClockInOutAPI.Models.TimeLog", b =>
                {
                    b.HasOne("ClockInOutAPI.Models.Employee", "Employee")
                        .WithMany("TimeLog")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClockInOutAPI.Models.Justification", "Justification")
                        .WithMany("TimeLogs")
                        .HasForeignKey("JustificationId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Employee");

                    b.Navigation("Justification");
                });

            modelBuilder.Entity("ClockInOutAPI.Models.Departament", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("ClockInOutAPI.Models.Employee", b =>
                {
                    b.Navigation("TimeLog");
                });

            modelBuilder.Entity("ClockInOutAPI.Models.HRAdministrator", b =>
                {
                    b.Navigation("Departaments");

                    b.Navigation("Employees");

                    b.Navigation("Justifications");

                    b.Navigation("Positions");
                });

            modelBuilder.Entity("ClockInOutAPI.Models.Justification", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("TimeLogs");
                });

            modelBuilder.Entity("ClockInOutAPI.Models.Position", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
